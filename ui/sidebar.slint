import { Button, VerticalBox, HorizontalBox, ScrollView, Palette, StyleMetrics } from "std-widgets.slint";

component NavItem inherits Rectangle {
    in property <string> text;
    in property <string> icon;
    in property <bool> active: false;
    in property <bool> collapsed: false;
    callback clicked();
    height: 40px;
    background: root.active ? Palette.selection-background : (touch-area.has-hover ? Palette.control-background : transparent);
    border-radius: 6px;
    HorizontalBox {
        padding-left: 12px;
        padding-right: 12px;
        alignment: root.collapsed ? center : start;
        
        // Icon placeholder (will be replaced with actual icons)
        Rectangle {
            width: 24px;
            height: 24px;
            background: root.active ? Palette.selection-foreground : Palette.foreground.with-alpha(0.7);
            border-radius: 4px;
            Text {
                text: root.icon;
                color: root.active ? Palette.selection-background : Palette.background;
                font-size: 12px;
                horizontal-alignment: center;
                vertical-alignment: center;
            }
        }

        if !root.collapsed: Text {
            text: root.text;
            color: root.active ? Palette.selection-foreground : Palette.foreground;
            font-size: 14px;
            font-weight: root.active ? 600 : 400;
            vertical-alignment: center;
        }
    }

    touch-area := TouchArea {
        clicked => {
            root.clicked();
        }
    }
}

component PlaylistItem inherits Rectangle {
    in property <string> name;
    in property <string> author;
    in property <bool> liked: false;
    callback clicked();
    height: 56px;
    background: touch-area.has-hover ? Palette.control-background.with-alpha(0.1) : transparent;
    border-radius: 4px;
    HorizontalBox {
        padding-left: 12px;
        padding-right: 12px;
        padding-top: 8px;
        padding-bottom: 8px;
        alignment: space-between;
        VerticalBox {
            alignment: start;
            spacing: 2px;
            horizontal-stretch: 1;
            Text {
                text: root.name;
                color: Palette.foreground;
                font-size: 14px;
                font-weight: 500;
                overflow: elide;
                horizontal-alignment: left;
            }

            Text {
                text: "By " + root.author;
                color: Palette.foreground.with-alpha(0.7);
                font-size: 12px;
                overflow: elide;
                horizontal-alignment: left;
            }
        }
        
        // Heart icon for liked playlists
        if root.liked: Rectangle {
            width: 20px;
            height: 20px;
            background: #1db954;
            border-radius: 10px;
            Text {
                text: "♥";
                color: white;
                font-size: 12px;
                horizontal-alignment: center;
                vertical-alignment: center;
            }
        }
    }

    touch-area := TouchArea {
        clicked => {
            root.clicked();
        }
    }
}

export component Sidebar inherits Rectangle {
    callback nav-item-clicked(string);
    callback playlist-clicked(string);
    in-out property <bool> collapsed: false;
    in-out property <length> sidebar-width: 240px;
    preferred-width: root.collapsed ? 72px : root.sidebar-width;
    min-width: 72px;
    max-width: 400px;
    background: Palette.background.darker(0.1);
    VerticalBox {
        spacing: 8px;
        padding: StyleMetrics.layout-padding;
        
        // Main Navigation
        VerticalBox {
            spacing: 4px;
            NavItem {
                text: "Home";
                icon: "🏠";
                active: true;
                collapsed: root.collapsed;
                clicked => {
                    root.nav-item-clicked("Home");
                }
            }

            NavItem {
                text: "Search";
                icon: "🔍";
                collapsed: root.collapsed;
                clicked => {
                    root.nav-item-clicked("Search");
                }
            }

            NavItem {
                text: "Your Library";
                icon: "📚";
                collapsed: root.collapsed;
                clicked => {
                    root.nav-item-clicked("Library");
                }
            }
        }
        
        // Separator
        Rectangle {
            height: 1px;
            background: Palette.border;
        }
        
        // Library Actions
        if !root.collapsed: VerticalBox {
            spacing: 4px;
            NavItem {
                text: "Create Playlist";
                icon: "➕";
                collapsed: root.collapsed;
                clicked => {
                    root.nav-item-clicked("CreatePlaylist");
                }
            }

            NavItem {
                text: "Liked Songs";
                icon: "💚";
                collapsed: root.collapsed;
                clicked => {
                    root.nav-item-clicked("LikedSongs");
                }
            }

            NavItem {
                text: "Downloaded Music";
                icon: "⬇️";
                collapsed: root.collapsed;
                clicked => {
                    root.nav-item-clicked("Downloaded");
                }
            }
        }
        
        // Another separator
        if !root.collapsed: Rectangle {
            height: 1px;
            background: Palette.border;
        }
        
        // Playlists section
        if !root.collapsed: VerticalBox {
            spacing: 0px;
            vertical-stretch: 1;
            Text {
                text: "Recently Created";
                color: Palette.foreground.with-alpha(0.7);
                font-size: 12px;
                font-weight: 600;
            }

            ScrollView {
                VerticalBox {
                    spacing: 2px;
                    PlaylistItem {
                        name: "My Playlist #1";
                        author: "You";
                        clicked => {
                            root.playlist-clicked("My Playlist #1");
                        }
                    }

                    PlaylistItem {
                        name: "Chill Vibes";
                        author: "You";
                        liked: true;
                        clicked => {
                            root.playlist-clicked("Chill Vibes");
                        }
                    }

                    PlaylistItem {
                        name: "Workout Mix";
                        author: "You";
                        clicked => {
                            root.playlist-clicked("Workout Mix");
                        }
                    }

                    PlaylistItem {
                        name: "Road Trip Songs";
                        author: "You";
                        clicked => {
                            root.playlist-clicked("Road Trip Songs");
                        }
                    }

                    PlaylistItem {
                        name: "Study Focus";
                        author: "You";
                        liked: true;
                        clicked => {
                            root.playlist-clicked("Study Focus");
                        }
                    }
                }
            }
        }
        
        // Collapse/Expand button
        Rectangle {
            height: 32px;
            background: touch-area-collapse.has-hover ? Palette.control-background : transparent;
            border-radius: 16px;
            Text {
                text: root.collapsed ? "→" : "←";
                color: Palette.foreground;
                font-size: 16px;
                horizontal-alignment: center;
                vertical-alignment: center;
            }

            touch-area-collapse := TouchArea {
                clicked => {
                    root.collapsed = !root.collapsed;
                }
            }
        }
    }
    
    // Right border / resize handle
    if !root.collapsed: Rectangle {
        x: parent.width - 4px;
        width: 4px;
        height: parent.height;
        background: resize-area.has-hover ? Palette.accent-background.with-alpha(0.3) : Palette.border;
        resize-area := TouchArea {
            mouse-cursor: ew-resize;
            property <length> start-width;
            pointer-event(event) => {
                if (event.button == PointerEventButton.left && event.kind == PointerEventKind.down) {
                    self.start-width = root.sidebar-width;
                }
            }
            moved => {
                if (self.pressed) {
                    root.sidebar-width = max(72px, min(400px, self.start-width + self.mouse-x - self.pressed-x));
                }
            }
        }
    }
    
    // Simple border when collapsed
    if root.collapsed: Rectangle {
        x: parent.width - 1px;
        width: 1px;
        height: parent.height;
        background: Palette.border;
    }
    
    // Animation for collapse/expand
    animate preferred-width {
        duration: 250ms;
        easing: ease-in-out;
    }
}
