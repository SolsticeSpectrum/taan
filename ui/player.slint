import { AlbumArt } from "components/player/album_art.slint";
import { PlayerControls } from "components/player/player_controls.slint";
import { CloseButton } from "components/player/close_button.slint";
import { Colors } from "components/common/colors.slint";
import { PlayerState } from "state/mod.slint";

export component MusicPlayer {
    // All player state is now managed globally through PlayerState
    
    // Main layout - horizontal with album art area and controls area
    HorizontalLayout {
        padding: 0px;
        spacing: 0px;
        
        // Album art section
        album-art-container := Rectangle {
            horizontal-stretch: 0;
            album-art := AlbumArt {
                album-art-url: PlayerState.album-art-url;
            }
        }
        
        // Controls section
        player-controls := PlayerControls {
            // Bind to global player state
            song-title: PlayerState.track-title;
            artist-name: PlayerState.track-artist;
            composer: PlayerState.track-composer;
            progress: PlayerState.progress;
            current-time: PlayerState.current-time;
            remaining-time: PlayerState.remaining-time;
            volume <=> PlayerState.volume;
            is-playing <=> PlayerState.is-playing;
            
            // Forward all callbacks to global state
            seek(value) => {
                PlayerState.seek-to-position(value);
            }
            volume-changed(value) => {
                PlayerState.set-volume(value);
            }
            previous-clicked => {
                PlayerState.previous-track();
            }
            play-pause-clicked => {
                PlayerState.toggle-play-pause();
            }
            next-clicked => {
                PlayerState.next-track();
            }
            stop-clicked => {
                PlayerState.stop();
            }
            shuffle-clicked => {
                PlayerState.toggle-shuffle();
            }
            repeat-clicked => {
                PlayerState.cycle-repeat();
            }
            playlist-clicked => {
                // Handle playlist view
                debug("Playlist clicked");
            }
        }
    }
    
    // // Close button (positioned absolutely in top-right)
    // close-button := CloseButton {
    //     x: parent.width - self.width - 16px;
    //     y: 16px;
    //     close-clicked => {
    //         // Handle close
    //         debug("Close clicked");
    //     }
    // }
}
